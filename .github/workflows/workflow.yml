name: python-deployment
run-name: ${{ github.actor }} - ${{ github.ref_name }}

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

env:
  PYTHON_VERSION: 3.8
  DOCKER_IMAGE_NAME: kube2py

concurrency:
  group: python-deployment-${{ github.ref }}
  cancel-in-progress: ${{ github.ref == 'refs/heads/main' }}

jobs:
  python-ci:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./src

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-cov
        pip install -r requirements.txt

    - name: Lint
      run: |
        cd ../
        flake8 . --show-source  --statistics

    - name: Check Complexity
      run: |
        cd ../
        flake8 . --statistics --max-complexity=10 --exit-zero
    - name: Run unit tests with pytest
      run: |
        pytest -v --cov=. --cov-report=term-missing --cov-report=json

    - name: Upload Artifacts
      if: github.ref_name == 'main'
      uses: actions/upload-artifact@v4
      with:
        name: python-artifacts
        path: ./src


    - name: Upload Artifacts
      if: github.ref_name == 'main'
      uses: actions/upload-artifact@v4
      with:
        name: helm-artifacts
        path: ${{ github.workspace }}/helm-charts


    - name: Debug GitHub Context
      run: |
        echo "GitHub Ref: ${{ github.ref }}"
        echo "GitHub Ref Name: ${{ github.ref_name }}"

  build-image:

    if: github.ref_name == 'main'
    runs-on: ubuntu-latest

    needs: "python-ci"

    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        name: python-artifacts
        path: .
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}


  helm-ci:

    runs-on: ubuntu-latest
    needs: python-ci
    if: github.ref_name == 'main'

    steps:

    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        name: helm-artifacts
        path: .
