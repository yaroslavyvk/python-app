name: python-deployment
run-name: ${{ github.actor }} - ${{ github.ref_name }}

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  PYTHON_VERSION: 3.8
  DOCKER_IMAGE_NAME: kube2py

jobs:
  python-ci:
    name: Python CI
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./src
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      name: Setup Python ${{ env.PYTHON_VERSION}}
      with:
        python-version: '${{ env.PYTHON_VERSION}}'
    - name: Install Dependecies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-cov
        pip install -r requirements.txt

    - name: Lint
      run: |
        cd ../
        flake8 . --show-source --statistics

    - name: Check Complexity
      run: |
        cd ../
        flake8 . --statistics --max-complexity=10 --exit-zero
    - name: Run unit test
      run: |
        pytest -v --cov=. --cov-report=term-missing  --cov-report=json
    - name: Upload python artifacts
      if: github.ref_name == 'main'
      uses: actions/upload-artifact@v4
      with:
        name: python-artifacts
        path: .
    - name: Upload helm artifacts
      if: github.ref_name == 'main'
      uses: actions/upload-artifact@v4
      with:
        name: helm-artifacts
        path: ${{ github.workspace }}/helm-charts

  build-image:
    name: Build and Push Image
    needs: ['python-ci']
    if: github.ref_name == 'main'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: python-artifacts
        path: .
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: ./src
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
  helm-ci:
    name: Helm CI
    runs-on: ubuntu-latest
    needs: python-ci
    if: github.ref_name == 'main'
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: helm-artifacts
        path: .
    - name: Set Up Helm
      uses: azure/setup-helm@4.2.0

    - name: Lint helm
      run: helm lint ./todoapp
    - name: Template Helm
      run: helm template todoapp ./todoapp -f /todoapp/values.yaml

    - name: Package Helm
      run: helm package ./todoapp
    - name: Upload Helm Artifact
      uses: actions/upload-artifact@v4
      with:
        name: helm-package
        path: ./*.tgz